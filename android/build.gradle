buildscript {
    ext.kotlin_version = '1.5.21' // for netmonster lib
    ext {

        // All project module configs should be in config map
        config = [
                applicationId    : "at.alladin.rmbt.android.prod",
                minSdkVersion    : 23,
                targetSdkVersion : 34,
                buildToolsVersion: "29.0.2",
                versionCode      : (project.hasProperty('buildVersionCode') ? Integer.parseInt(buildVersionCode) : 5),
                versionName      : (project.hasProperty('buildVersionName') ? buildVersionName : '4.0.423')
        ]

        // All project modules dependency versions should be in versions map
        versions = [
            kotlin              : '1.7.21',
            coroutines          : '1.3.7',
            gson                : '2.8.6',
            joda_time           : '2.10.9.1',
            appcompat           : '1.2.0',
            androidx_core       : '1.3.1',
            androidx_preference : '1.1.1',
            lifecycle_extensions: '2.2.0',
            lifecycle_service   : '2.2.0',
            dnsjava             : '2.1.8',
            jopt_simple         : '5.0.4',
            guava               : '28.1-android',
            work_manager        : '2.7.0',
            timber              : '4.7.1'
        ]
    }

    repositories {
        google()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:7.2.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
        classpath 'com.google.gms:google-services:4.3.15'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.2'
        classpath "io.github.jmatsu:license-list-gradle:0.8.0"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
    project.evaluationDependsOn(':app')
    project.evaluationDependsOn(':netmonster_core:library')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
