// Mocks generated by Mockito 5.4.4 from annotations
// in nt_flutter_standalone/test/measurement-result/unit-tests/measurement-result-cubit_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;
import 'dart:math' as _i4;
import 'dart:typed_data' as _i12;
import 'dart:ui' as _i11;

import 'package:dio/dio.dart' as _i2;
import 'package:mapbox_gl/mapbox_gl.dart' as _i10;
import 'package:mapbox_gl_platform_interface/mapbox_gl_platform_interface.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:nt_flutter_standalone/core/models/error-handler.dart' as _i8;
import 'package:nt_flutter_standalone/modules/measurement-result/models/measurement-history-result.dart'
    as _i7;
import 'package:nt_flutter_standalone/modules/measurement-result/models/speed-curve.item.dart'
    as _i9;
import 'package:nt_flutter_standalone/modules/measurement-result/services/measurement-result.service.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeArgumentCallbacks_1<T> extends _i1.SmartFake
    implements _i3.ArgumentCallbacks<T> {
  _FakeArgumentCallbacks_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSymbol_2 extends _i1.SmartFake implements _i3.Symbol {
  _FakeSymbol_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLng_3 extends _i1.SmartFake implements _i3.LatLng {
  _FakeLatLng_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLine_4 extends _i1.SmartFake implements _i3.Line {
  _FakeLine_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCircle_5 extends _i1.SmartFake implements _i3.Circle {
  _FakeCircle_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFill_6 extends _i1.SmartFake implements _i3.Fill {
  _FakeFill_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLatLngBounds_7 extends _i1.SmartFake implements _i3.LatLngBounds {
  _FakeLatLngBounds_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePoint_8<T extends num> extends _i1.SmartFake
    implements _i4.Point<T> {
  _FakePoint_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [MeasurementResultService].
///
/// See the documentation for Mockito's code generation for more information.
class MockMeasurementResultService extends _i1.Mock
    implements _i5.MeasurementResultService {
  MockMeasurementResultService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  bool get testing => (super.noSuchMethod(
        Invocation.getter(#testing),
        returnValue: false,
      ) as bool);

  @override
  set testing(bool? _testing) => super.noSuchMethod(
        Invocation.setter(
          #testing,
          _testing,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<_i7.MeasurementHistoryResult?> getMeasurementHistoryResult(
    String? uuid, {
    _i8.ErrorHandler? errorHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMeasurementHistoryResult,
          [uuid],
          {#errorHandler: errorHandler},
        ),
        returnValue: _i6.Future<_i7.MeasurementHistoryResult?>.value(),
      ) as _i6.Future<_i7.MeasurementHistoryResult?>);

  @override
  _i6.Future<Map<String, List<_i9.SpeedCurveItem>>?> getMeasurementSpeedGraphs(
    String? uuid, {
    _i8.ErrorHandler? errorHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMeasurementSpeedGraphs,
          [uuid],
          {#errorHandler: errorHandler},
        ),
        returnValue: _i6.Future<Map<String, List<_i9.SpeedCurveItem>>?>.value(),
      ) as _i6.Future<Map<String, List<_i9.SpeedCurveItem>>?>);

  @override
  _i6.Future<_i7.MeasurementHistoryResult?> getResultWithSpeedCurves(
    String? uuid, {
    _i7.MeasurementHistoryResult? result,
    _i8.ErrorHandler? errorHandler,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getResultWithSpeedCurves,
          [uuid],
          {
            #result: result,
            #errorHandler: errorHandler,
          },
        ),
        returnValue: _i6.Future<_i7.MeasurementHistoryResult?>.value(),
      ) as _i6.Future<_i7.MeasurementHistoryResult?>);

  @override
  _i2.Dio dioInstanceForUrl(String? url) => (super.noSuchMethod(
        Invocation.method(
          #dioInstanceForUrl,
          [url],
        ),
        returnValue: _FakeDio_0(
          this,
          Invocation.method(
            #dioInstanceForUrl,
            [url],
          ),
        ),
      ) as _i2.Dio);
}

/// A class which mocks [MapboxMapController].
///
/// See the documentation for Mockito's code generation for more information.
class MockMapboxMapController extends _i1.Mock
    implements _i10.MapboxMapController {
  MockMapboxMapController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set fillManager(_i10.FillManager? _fillManager) => super.noSuchMethod(
        Invocation.setter(
          #fillManager,
          _fillManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set lineManager(_i10.LineManager? _lineManager) => super.noSuchMethod(
        Invocation.setter(
          #lineManager,
          _lineManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set circleManager(_i10.CircleManager? _circleManager) => super.noSuchMethod(
        Invocation.setter(
          #circleManager,
          _circleManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  set symbolManager(_i10.SymbolManager? _symbolManager) => super.noSuchMethod(
        Invocation.setter(
          #symbolManager,
          _symbolManager,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.ArgumentCallbacks<_i3.Symbol> get onSymbolTapped => (super.noSuchMethod(
        Invocation.getter(#onSymbolTapped),
        returnValue: _FakeArgumentCallbacks_1<_i3.Symbol>(
          this,
          Invocation.getter(#onSymbolTapped),
        ),
      ) as _i3.ArgumentCallbacks<_i3.Symbol>);

  @override
  _i3.ArgumentCallbacks<_i3.Circle> get onCircleTapped => (super.noSuchMethod(
        Invocation.getter(#onCircleTapped),
        returnValue: _FakeArgumentCallbacks_1<_i3.Circle>(
          this,
          Invocation.getter(#onCircleTapped),
        ),
      ) as _i3.ArgumentCallbacks<_i3.Circle>);

  @override
  _i3.ArgumentCallbacks<_i3.Fill> get onFillTapped => (super.noSuchMethod(
        Invocation.getter(#onFillTapped),
        returnValue: _FakeArgumentCallbacks_1<_i3.Fill>(
          this,
          Invocation.getter(#onFillTapped),
        ),
      ) as _i3.ArgumentCallbacks<_i3.Fill>);

  @override
  List<_i10.OnFeatureInteractionCallback> get onFeatureTapped =>
      (super.noSuchMethod(
        Invocation.getter(#onFeatureTapped),
        returnValue: <_i10.OnFeatureInteractionCallback>[],
      ) as List<_i10.OnFeatureInteractionCallback>);

  @override
  List<_i10.OnFeatureDragnCallback> get onFeatureDrag => (super.noSuchMethod(
        Invocation.getter(#onFeatureDrag),
        returnValue: <_i10.OnFeatureDragnCallback>[],
      ) as List<_i10.OnFeatureDragnCallback>);

  @override
  _i3.ArgumentCallbacks<_i3.Symbol> get onInfoWindowTapped =>
      (super.noSuchMethod(
        Invocation.getter(#onInfoWindowTapped),
        returnValue: _FakeArgumentCallbacks_1<_i3.Symbol>(
          this,
          Invocation.getter(#onInfoWindowTapped),
        ),
      ) as _i3.ArgumentCallbacks<_i3.Symbol>);

  @override
  _i3.ArgumentCallbacks<_i3.Line> get onLineTapped => (super.noSuchMethod(
        Invocation.getter(#onLineTapped),
        returnValue: _FakeArgumentCallbacks_1<_i3.Line>(
          this,
          Invocation.getter(#onLineTapped),
        ),
      ) as _i3.ArgumentCallbacks<_i3.Line>);

  @override
  Set<_i3.Symbol> get symbols => (super.noSuchMethod(
        Invocation.getter(#symbols),
        returnValue: <_i3.Symbol>{},
      ) as Set<_i3.Symbol>);

  @override
  Set<_i3.Line> get lines => (super.noSuchMethod(
        Invocation.getter(#lines),
        returnValue: <_i3.Line>{},
      ) as Set<_i3.Line>);

  @override
  Set<_i3.Circle> get circles => (super.noSuchMethod(
        Invocation.getter(#circles),
        returnValue: <_i3.Circle>{},
      ) as Set<_i3.Circle>);

  @override
  Set<_i3.Fill> get fills => (super.noSuchMethod(
        Invocation.getter(#fills),
        returnValue: <_i3.Fill>{},
      ) as Set<_i3.Fill>);

  @override
  bool get isCameraMoving => (super.noSuchMethod(
        Invocation.getter(#isCameraMoving),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  void resizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #resizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void forceResizeWebMap() => super.noSuchMethod(
        Invocation.method(
          #forceResizeWebMap,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.Future<bool?> animateCamera(
    _i3.CameraUpdate? cameraUpdate, {
    Duration? duration,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #animateCamera,
          [cameraUpdate],
          {#duration: duration},
        ),
        returnValue: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);

  @override
  _i6.Future<bool?> moveCamera(_i3.CameraUpdate? cameraUpdate) =>
      (super.noSuchMethod(
        Invocation.method(
          #moveCamera,
          [cameraUpdate],
        ),
        returnValue: _i6.Future<bool?>.value(),
      ) as _i6.Future<bool?>);

  @override
  _i6.Future<void> addGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson, {
    String? promoteId,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
          {#promoteId: promoteId},
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setGeoJsonSource(
    String? sourceId,
    Map<String, dynamic>? geojson,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonSource,
          [
            sourceId,
            geojson,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setGeoJsonFeature(
    String? sourceId,
    Map<String, dynamic>? geojsonFeature,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setGeoJsonFeature,
          [
            sourceId,
            geojsonFeature,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addSymbolLayer(
    String? sourceId,
    String? layerId,
    _i10.SymbolLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbolLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addLineLayer(
    String? sourceId,
    String? layerId,
    _i10.LineLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLineLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addFillLayer(
    String? sourceId,
    String? layerId,
    _i10.FillLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFillLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addCircleLayer(
    String? sourceId,
    String? layerId,
    _i10.CircleLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
    bool? enableInteraction = true,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircleLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
            #enableInteraction: enableInteraction,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addRasterLayer(
    String? sourceId,
    String? layerId,
    _i10.RasterLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addRasterLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addHillshadeLayer(
    String? sourceId,
    String? layerId,
    _i10.HillshadeLayerProperties? properties, {
    String? belowLayerId,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addHillshadeLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateMyLocationTrackingMode(
          _i3.MyLocationTrackingMode? myLocationTrackingMode) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateMyLocationTrackingMode,
          [myLocationTrackingMode],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> matchMapLanguageWithDeviceDefault() => (super.noSuchMethod(
        Invocation.method(
          #matchMapLanguageWithDeviceDefault,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> updateContentInsets(
    dynamic insets, [
    bool? animated = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateContentInsets,
          [
            insets,
            animated,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setMapLanguage(String? language) => (super.noSuchMethod(
        Invocation.method(
          #setMapLanguage,
          [language],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setTelemetryEnabled(bool? enabled) => (super.noSuchMethod(
        Invocation.method(
          #setTelemetryEnabled,
          [enabled],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<bool> getTelemetryEnabled() => (super.noSuchMethod(
        Invocation.method(
          #getTelemetryEnabled,
          [],
        ),
        returnValue: _i6.Future<bool>.value(false),
      ) as _i6.Future<bool>);

  @override
  _i6.Future<_i3.Symbol> addSymbol(
    _i3.SymbolOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbol,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i3.Symbol>.value(_FakeSymbol_2(
          this,
          Invocation.method(
            #addSymbol,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Symbol>);

  @override
  _i6.Future<List<_i3.Symbol>> addSymbols(
    List<_i3.SymbolOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSymbols,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i3.Symbol>>.value(<_i3.Symbol>[]),
      ) as _i6.Future<List<_i3.Symbol>>);

  @override
  _i6.Future<void> updateSymbol(
    _i3.Symbol? symbol,
    _i3.SymbolOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateSymbol,
          [
            symbol,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.LatLng> getSymbolLatLng(_i3.Symbol? symbol) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSymbolLatLng,
          [symbol],
        ),
        returnValue: _i6.Future<_i3.LatLng>.value(_FakeLatLng_3(
          this,
          Invocation.method(
            #getSymbolLatLng,
            [symbol],
          ),
        )),
      ) as _i6.Future<_i3.LatLng>);

  @override
  _i6.Future<void> removeSymbol(_i3.Symbol? symbol) => (super.noSuchMethod(
        Invocation.method(
          #removeSymbol,
          [symbol],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeSymbols(Iterable<_i3.Symbol>? symbols) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeSymbols,
          [symbols],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearSymbols() => (super.noSuchMethod(
        Invocation.method(
          #clearSymbols,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Line> addLine(
    _i3.LineOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLine,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i3.Line>.value(_FakeLine_4(
          this,
          Invocation.method(
            #addLine,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Line>);

  @override
  _i6.Future<List<_i3.Line>> addLines(
    List<_i3.LineOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLines,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i3.Line>>.value(<_i3.Line>[]),
      ) as _i6.Future<List<_i3.Line>>);

  @override
  _i6.Future<void> updateLine(
    _i3.Line? line,
    _i3.LineOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLine,
          [
            line,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<_i3.LatLng>> getLineLatLngs(_i3.Line? line) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLineLatLngs,
          [line],
        ),
        returnValue: _i6.Future<List<_i3.LatLng>>.value(<_i3.LatLng>[]),
      ) as _i6.Future<List<_i3.LatLng>>);

  @override
  _i6.Future<void> removeLine(_i3.Line? line) => (super.noSuchMethod(
        Invocation.method(
          #removeLine,
          [line],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeLines(Iterable<_i3.Line>? lines) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeLines,
          [lines],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearLines() => (super.noSuchMethod(
        Invocation.method(
          #clearLines,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Circle> addCircle(
    _i3.CircleOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircle,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i3.Circle>.value(_FakeCircle_5(
          this,
          Invocation.method(
            #addCircle,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Circle>);

  @override
  _i6.Future<List<_i3.Circle>> addCircles(
    List<_i3.CircleOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addCircles,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i3.Circle>>.value(<_i3.Circle>[]),
      ) as _i6.Future<List<_i3.Circle>>);

  @override
  _i6.Future<void> updateCircle(
    _i3.Circle? circle,
    _i3.CircleOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCircle,
          [
            circle,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.LatLng> getCircleLatLng(_i3.Circle? circle) =>
      (super.noSuchMethod(
        Invocation.method(
          #getCircleLatLng,
          [circle],
        ),
        returnValue: _i6.Future<_i3.LatLng>.value(_FakeLatLng_3(
          this,
          Invocation.method(
            #getCircleLatLng,
            [circle],
          ),
        )),
      ) as _i6.Future<_i3.LatLng>);

  @override
  _i6.Future<void> removeCircle(_i3.Circle? circle) => (super.noSuchMethod(
        Invocation.method(
          #removeCircle,
          [circle],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeCircles(Iterable<_i3.Circle>? circles) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeCircles,
          [circles],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearCircles() => (super.noSuchMethod(
        Invocation.method(
          #clearCircles,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i3.Fill> addFill(
    _i3.FillOptions? options, [
    Map<dynamic, dynamic>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFill,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<_i3.Fill>.value(_FakeFill_6(
          this,
          Invocation.method(
            #addFill,
            [
              options,
              data,
            ],
          ),
        )),
      ) as _i6.Future<_i3.Fill>);

  @override
  _i6.Future<List<_i3.Fill>> addFills(
    List<_i3.FillOptions>? options, [
    List<Map<dynamic, dynamic>>? data,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addFills,
          [
            options,
            data,
          ],
        ),
        returnValue: _i6.Future<List<_i3.Fill>>.value(<_i3.Fill>[]),
      ) as _i6.Future<List<_i3.Fill>>);

  @override
  _i6.Future<void> updateFill(
    _i3.Fill? fill,
    _i3.FillOptions? changes,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFill,
          [
            fill,
            changes,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> clearFills() => (super.noSuchMethod(
        Invocation.method(
          #clearFills,
          [],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeFill(_i3.Fill? fill) => (super.noSuchMethod(
        Invocation.method(
          #removeFill,
          [fill],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeFills(Iterable<_i3.Fill>? fills) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeFills,
          [fills],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<List<dynamic>> queryRenderedFeatures(
    _i4.Point<double>? point,
    List<String>? layerIds,
    List<Object>? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeatures,
          [
            point,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i6.Future<List<dynamic>>);

  @override
  _i6.Future<List<dynamic>> queryRenderedFeaturesInRect(
    _i11.Rect? rect,
    List<String>? layerIds,
    String? filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #queryRenderedFeaturesInRect,
          [
            rect,
            layerIds,
            filter,
          ],
        ),
        returnValue: _i6.Future<List<dynamic>>.value(<dynamic>[]),
      ) as _i6.Future<List<dynamic>>);

  @override
  _i6.Future<dynamic> invalidateAmbientCache() => (super.noSuchMethod(
        Invocation.method(
          #invalidateAmbientCache,
          [],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);

  @override
  _i6.Future<_i3.LatLng?> requestMyLocationLatLng() => (super.noSuchMethod(
        Invocation.method(
          #requestMyLocationLatLng,
          [],
        ),
        returnValue: _i6.Future<_i3.LatLng?>.value(),
      ) as _i6.Future<_i3.LatLng?>);

  @override
  _i6.Future<_i3.LatLngBounds> getVisibleRegion() => (super.noSuchMethod(
        Invocation.method(
          #getVisibleRegion,
          [],
        ),
        returnValue: _i6.Future<_i3.LatLngBounds>.value(_FakeLatLngBounds_7(
          this,
          Invocation.method(
            #getVisibleRegion,
            [],
          ),
        )),
      ) as _i6.Future<_i3.LatLngBounds>);

  @override
  _i6.Future<void> addImage(
    String? name,
    _i12.Uint8List? bytes, [
    bool? sdf = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImage,
          [
            name,
            bytes,
            sdf,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolIconAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconAllowOverlap,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolIconIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolIconIgnorePlacement,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolTextAllowOverlap(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextAllowOverlap,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setSymbolTextIgnorePlacement(bool? enable) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSymbolTextIgnorePlacement,
          [enable],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImageSource(
    String? imageSourceId,
    _i12.Uint8List? bytes,
    _i3.LatLngQuad? coordinates,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageSource,
          [
            imageSourceId,
            bytes,
            coordinates,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeImageSource(String? imageSourceId) =>
      (super.noSuchMethod(
        Invocation.method(
          #removeImageSource,
          [imageSourceId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeSource(String? sourceId) => (super.noSuchMethod(
        Invocation.method(
          #removeSource,
          [sourceId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImageLayer(
    String? layerId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayer,
          [
            layerId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addImageLayerBelow(
    String? layerId,
    String? sourceId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addImageLayerBelow,
          [
            layerId,
            sourceId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addLayerBelow(
    String? layerId,
    String? sourceId,
    String? imageSourceId, {
    double? minzoom,
    double? maxzoom,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLayerBelow,
          [
            layerId,
            sourceId,
            imageSourceId,
          ],
          {
            #minzoom: minzoom,
            #maxzoom: maxzoom,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> removeLayer(String? layerId) => (super.noSuchMethod(
        Invocation.method(
          #removeLayer,
          [layerId],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setLayerVisibility(
    bool? visibility,
    String? imageLayerId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setLayerVisibility,
          [
            visibility,
            imageLayerId,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> setFilter(
    String? layerId,
    dynamic filter,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setFilter,
          [
            layerId,
            filter,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<_i4.Point<num>> toScreenLocation(_i3.LatLng? latLng) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocation,
          [latLng],
        ),
        returnValue: _i6.Future<_i4.Point<num>>.value(_FakePoint_8<num>(
          this,
          Invocation.method(
            #toScreenLocation,
            [latLng],
          ),
        )),
      ) as _i6.Future<_i4.Point<num>>);

  @override
  _i6.Future<List<_i4.Point<num>>> toScreenLocationBatch(
          Iterable<_i3.LatLng>? latLngs) =>
      (super.noSuchMethod(
        Invocation.method(
          #toScreenLocationBatch,
          [latLngs],
        ),
        returnValue: _i6.Future<List<_i4.Point<num>>>.value(<_i4.Point<num>>[]),
      ) as _i6.Future<List<_i4.Point<num>>>);

  @override
  _i6.Future<_i3.LatLng> toLatLng(_i4.Point<num>? screenLocation) =>
      (super.noSuchMethod(
        Invocation.method(
          #toLatLng,
          [screenLocation],
        ),
        returnValue: _i6.Future<_i3.LatLng>.value(_FakeLatLng_3(
          this,
          Invocation.method(
            #toLatLng,
            [screenLocation],
          ),
        )),
      ) as _i6.Future<_i3.LatLng>);

  @override
  _i6.Future<double> getMetersPerPixelAtLatitude(double? latitude) =>
      (super.noSuchMethod(
        Invocation.method(
          #getMetersPerPixelAtLatitude,
          [latitude],
        ),
        returnValue: _i6.Future<double>.value(0.0),
      ) as _i6.Future<double>);

  @override
  _i6.Future<void> addSource(
    String? sourceid,
    _i3.SourceProperties? properties,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addSource,
          [
            sourceid,
            properties,
          ],
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  _i6.Future<void> addLayer(
    String? sourceId,
    String? layerId,
    _i10.LayerProperties? properties, {
    String? belowLayerId,
    bool? enableInteraction = true,
    String? sourceLayer,
    double? minzoom,
    double? maxzoom,
    dynamic filter,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLayer,
          [
            sourceId,
            layerId,
            properties,
          ],
          {
            #belowLayerId: belowLayerId,
            #enableInteraction: enableInteraction,
            #sourceLayer: sourceLayer,
            #minzoom: minzoom,
            #maxzoom: maxzoom,
            #filter: filter,
          },
        ),
        returnValue: _i6.Future<void>.value(),
        returnValueForMissingStub: _i6.Future<void>.value(),
      ) as _i6.Future<void>);

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i11.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
